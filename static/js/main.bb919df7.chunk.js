(this["webpackJsonpgoit-react-hw-02-phonebook"]=this["webpackJsonpgoit-react-hw-02-phonebook"]||[]).push([[0],{15:function(e,t,n){"use strict";n.r(t);var a=n(1),r=n.n(a),c=n(7),s=n.n(c),i=n(9),o=n(2),u=n(3),l=n(5),d=n(4),h=n(8),b=n(0),m=function(e){Object(l.a)(n,e);var t=Object(d.a)(n);function n(){var e;Object(o.a)(this,n);for(var a=arguments.length,r=new Array(a),c=0;c<a;c++)r[c]=arguments[c];return(e=t.call.apply(t,[this].concat(r))).state={name:"",number:""},e.handleChange=function(t){e.setState(Object(h.a)({},t.currentTarget.name,t.currentTarget.value))},e.handleSubmit=function(t){t.preventDefault(),console.log(e.state),e.props.onSubmit(e.state),e.setState({name:"",number:""})},e}return Object(u.a)(n,[{key:"render",value:function(){return Object(b.jsxs)("form",{onSubmit:this.handleSubmit,children:[Object(b.jsxs)("label",{children:[" Name",Object(b.jsx)("input",{type:"text",name:"name",pattern:"^[a-zA-Z\u0430-\u044f\u0410-\u042f]+(([' -][a-zA-Z\u0430-\u044f\u0410-\u042f ])?[a-zA-Z\u0430-\u044f\u0410-\u042f]*)*$",title:"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan",required:!0,value:this.state.name,onChange:this.handleChange})]}),Object(b.jsxs)("label",{children:["Number",Object(b.jsx)("input",{type:"tel",name:"number",pattern:"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}",title:"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +",required:!0,value:this.state.number,onChange:this.handleChange})]}),Object(b.jsx)("button",{type:"submit",children:"Add contact"})]})}}]),n}(a.Component),j=m;var p=function(e){var t=e.contacts;return Object(b.jsx)("div",{children:Object(b.jsx)("ul",{children:t.map((function(e){return Object(b.jsxs)("li",{children:[e.name,": ",e.number]},e.id)}))})})};var O=function(e){var t=e.value,n=e.onChange;return Object(b.jsxs)("div",{children:[Object(b.jsx)("h3",{children:"Find contacts by name"}),Object(b.jsx)("input",{type:"text",name:"filter",value:t,onChange:n})]})},f=function(e){Object(l.a)(n,e);var t=Object(d.a)(n);function n(){var e;Object(o.a)(this,n);for(var a=arguments.length,r=new Array(a),c=0;c<a;c++)r[c]=arguments[c];return(e=t.call.apply(t,[this].concat(r))).state={contacts:[{id:"id-1",name:"Rosie Simpson",number:"459-12-56"},{id:"id-2",name:"Hermione Kline",number:"443-89-12"},{id:"id-3",name:"Eden Clements",number:"645-17-79"},{id:"id-4",name:"Annie Copeland",number:"227-91-26"}],filter:""},e.addContact=function(t){var n={name:t.name,number:t.number};e.state.contacts.some((function(e){return e.name.toLowerCase()===n.name.toLowerCase()}))||e.state.contacts.some((function(e){return e.number===n.number}))?alert("".concat(n.name," is already in contacts!")):e.setState((function(e){var t=e.contacts;return{contacts:[n].concat(Object(i.a)(t))}}))},e.handleChangeFilter=function(t){e.setState({filter:t.currentTarget.value})},e.handleContactFilter=function(){return e.state.contacts.filter((function(t){return t.name.toLowerCase().includes(e.state.filter.toLowerCase())}))},e}return Object(u.a)(n,[{key:"render",value:function(){return Object(b.jsxs)("div",{children:[Object(b.jsx)("h1",{children:"Phonebook"}),Object(b.jsx)(j,{onSubmit:this.addContact}),Object(b.jsx)("h2",{children:"Contacts"}),Object(b.jsx)(O,{onChange:this.handleChangeFilter,value:this.statefilter}),Object(b.jsx)(p,{contacts:this.handleContactFilter()})]})}}]),n}(a.Component),v=f;s.a.render(Object(b.jsx)(r.a.StrictMode,{children:Object(b.jsx)(v,{})}),document.getElementById("root"))}},[[15,1,2]]]);
//# sourceMappingURL=main.bb919df7.chunk.js.map